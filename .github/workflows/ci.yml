name: CI

on:
  pull_request:
    branches: [ main ]

env:
  COGNITO_CLIENT_ID: ${{ secrets.COGNITO_CLIENT_ID }}
  COGNITO_TEST_USERNAME: ${{ secrets.COGNITO_TEST_USERNAME }}
  COGNITO_TEST_PASSWORD: ${{ secrets.COGNITO_TEST_PASSWORD }}
  COGNITO_CLIENT_SECRET: ${{ secrets.COGNITO_CLIENT_SECRET }}
  AWS_REGION: ${{ vars.AWS_REGION }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm ci
      - name: Build the library
        run: npm run build
      - name: Run unit tests
        run: npm run test:unit

  integration-tests:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - principal-type: 'custom'
            authorizer: 'Cedar'
          - principal-type: 'identityToken'
            authorizer: 'AVP'
          - principal-type: 'accessToken'
            authorizer: 'AVP'
          - principal-type: 'custom'
            authorizer: 'AVP'
      fail-fast: false
    
    name: Integration Test (Principal ${{ matrix.principal-type }}, Authorizer ${{ matrix.authorizer }})
    
    steps:
    - uses: actions/checkout@v3
    - run: npm ci
    - name: Install example app dependencies
      run: |
        cd example
        npm install
    - name: Start Express App
      run: |
        cd example
        PRINCIPAL_TYPE=${{ matrix.principal-type }} AUTHORIZER=${{ matrix.authorizer }} npm start &
    - name: Wait for server
      run: sleep 10
    - name: Run Integration Tests
      run: npm run test:integration

  integration-express-versions:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        express-version: ['4.x', 'latest']
      fail-fast: false
    
    name: Integration Test (Express v${{ matrix.express-version }})
    
    steps:
    - uses: actions/checkout@v3
    - run: npm ci
    - name: Install example app dependencies
      run: |
        cd example
        npm install
        npm install express@${{ matrix.express-version }}
        npm ls express
    - name: Start Express App
      run: cd example && npm start &
    - name: Wait for server
      run: sleep 10
    - name: Run Integration Tests
      run: npm run test:integration